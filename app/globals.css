@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255; /* White text for dark mode */
  --background-start-rgb: 10, 10, 12; /* Dark mode gradient start */
  --background-end-rgb: 5, 5, 5; /* Dark mode gradient end */
  
  /* Ruyarestaurant colors */
  --neon-blue: 0, 229, 255;
  --neon-blue-dark: 0, 119, 255;
  --neon-purple: 157, 78, 221;
  --neon-purple-light: 199, 125, 255;
}

.light {
  --foreground-rgb: 0, 0, 0; /* Matte black text for light mode */
  --background-start-rgb: 255, 255, 255; /* Pure white for light mode */
  --background-end-rgb: 255, 255, 255; /* Pure white (no gradient) */
}

@layer base {
  :root {
    --background: 0 0% 3.9%; /* Dark mode background */
    --foreground: 0 0% 98%; /* Dark mode text */
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 186 100% 50%;
    --primary-foreground: 0 0% 9%;
    --secondary: 270 76% 58%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 279 56% 68%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 186 100% 50%;
    --radius: 0.5rem;
  }

  .light {
    --background: 0 0% 100%; /* Pure white background */
    --foreground: 0 0% 0%; /* Matte black text */
    --card: 0 0% 100%; /* Pure white for cards */
    --card-foreground: 0 0% 0%; /* Black text for cards */
    --popover: 0 0% 100%; /* Pure white for popovers */
    --popover-foreground: 0 0% 0%; /* Black text for popovers */
    --primary: 186 100% 40%;
    --primary-foreground: 0 0% 0%; /* Black for primary elements */
    --secondary: 270 76% 48%;
    --secondary-foreground: 0 0% 0%; /* Black for secondary elements */
    --muted: 0 0% 90%;
    --muted-foreground: 0 0% 40%;
    --accent: 279 56% 58%;
    --accent-foreground: 0 0% 0%; /* Black for accents */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 0%; /* Black for destructive actions */
    --border: 0 0% 80%; /* Light gray border */
    --input: 0 0% 80%; /* Light gray input */
    --ring: 186 100% 40%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply text-foreground;
    background: rgb(var(--background-start-rgb)); /* Use single color, no gradient */
    background-attachment: fixed;
  }
  
  h1, h2, h3, h4, h5, h6 {
    @apply font-orbitron tracking-wider;
  }
}

@layer components {
  .neon-glow {
    text-shadow: 0 0 5px theme('colors.primary.DEFAULT'), 
                0 0 10px theme('colors.primary.DEFAULT'),
                0 0 20px theme('colors.primary.DEFAULT');
  }
  
  .light .neon-glow {
    text-shadow: none; /* Remove neon glow in light mode */
  }
  
  .neon-glow-purple {
    text-shadow: 0 0 5px theme('colors.secondary.DEFAULT'), 
                0 0 10px theme('colors.secondary.DEFAULT'),
                0 0 20px theme('colors.secondary.DEFAULT');
  }
  
  .light .neon-glow-purple {
    text-shadow: none; /* Remove purple neon glow in light mode */
  }
  
  .glass {
    @apply bg-black/20 backdrop-blur-md border border-white/10 shadow-xl;
  }

  .dark .glass {
    @apply bg-black/20 border-white/10;
  }

  .light .glass {
    @apply bg-white border-black/10; /* Solid white, no transparency or blur */
  }

  .hero-gradient {
    background: linear-gradient(
      135deg,
      rgba(var(--neon-blue), 0.3) 0%,
      rgba(var(--neon-purple), 0.3) 100%
    );
  }
  
  .light .hero-gradient {
    background: none; /* Remove gradient in light mode */
  }
  
  .glow-button {
    @apply relative inline-flex items-center justify-center px-6 py-3 overflow-hidden font-medium transition-all rounded-md border text-white;
  }

  .dark .glow-button {
    @apply bg-black/40 backdrop-blur-sm border-primary/50 group-hover:border-primary text-white;
  }

  .light .glow-button {
    @apply bg-white border-black text-black; /* Solid white bg, black text and border */
  }
  
  .glow-button:before {
    @apply content-[''] absolute top-0 left-0 w-full h-full bg-gradient-to-br from-primary to-secondary opacity-0 transition-opacity duration-300 group-hover:opacity-20;
  }
  
  .light .glow-button:before {
    @apply opacity-0; /* Disable gradient effect in light mode */
  }
  
  .glow-button:after {
    @apply content-[''] absolute inset-0 border border-primary rounded-md opacity-0 transition-opacity duration-300 group-hover:opacity-100;
    box-shadow: 0 0 15px theme('colors.primary.DEFAULT');
  }
  
  .light .glow-button:after {
    @apply opacity-0; /* Disable glow effect in light mode */
  }
}

.bg-grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 40px 40px;
}

.light .bg-grid-pattern {
  background-image: none; /* Remove grid pattern in light mode */
}

/* Font families */
.font-sans {
  font-family: var(--font-inter), ui-sans-serif, system-ui, sans-serif;
}

.font-orbitron {
  font-family: var(--font-orbitron), ui-sans-serif, system-ui, sans-serif;
}

/* Menu page filter animations */
.menu-filter-enter {
  opacity: 0;
  transform: scale(0.9);
}
.menu-filter-enter-active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 300ms, transform 300ms;
}
.menu-filter-exit {
  opacity: 1;
}
.menu-filter-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms, transform 300ms;
}